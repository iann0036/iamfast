// Generated from grammars/RustLexer.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


import RustLexerBase from './RustLexerBase.js';

const serializedATN = [4,0,130,1167,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,
2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,
7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,
34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,
48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,
77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,
92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,
7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,
111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,
117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,
123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,7,128,2,129,7,
129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,2,135,7,
135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,2,141,7,
141,2,142,7,142,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,
1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,
1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,
1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,
1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,
16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,
1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,
22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,
1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,
32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,
1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,
37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,
1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,
42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,
1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,
46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,51,1,51,1,
51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,
55,1,55,1,55,1,55,1,55,1,56,1,56,5,56,607,8,56,10,56,12,56,610,9,56,1,56,
1,56,4,56,614,8,56,11,56,12,56,615,3,56,618,8,56,1,57,1,57,1,57,1,57,1,57,
1,58,1,58,1,58,1,58,1,58,1,58,3,58,631,8,58,1,58,5,58,634,8,58,10,58,12,
58,637,9,58,1,58,1,58,3,58,641,8,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,
59,1,59,3,59,652,8,59,1,59,1,59,5,59,656,8,59,10,59,12,59,659,9,59,1,59,
1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,672,8,59,1,59,1,59,
1,60,1,60,1,60,1,60,1,60,5,60,681,8,60,10,60,12,60,684,9,60,1,60,1,60,1,
61,1,61,1,61,1,61,1,61,1,61,5,61,694,8,61,10,61,12,61,697,9,61,1,61,1,61,
1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,5,62,710,8,62,10,62,12,62,713,
9,62,3,62,715,8,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,3,63,725,8,63,
1,63,1,63,5,63,729,8,63,10,63,12,63,732,9,63,1,63,1,63,1,63,1,63,1,63,1,
64,1,64,1,64,3,64,742,8,64,1,64,1,64,1,65,1,65,3,65,748,8,65,1,65,1,65,1,
65,1,65,5,65,754,8,65,10,65,12,65,757,9,65,1,65,1,65,1,66,1,66,1,66,1,66,
1,67,1,67,1,67,3,67,768,8,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,3,68,777,
8,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,5,69,787,8,69,10,69,12,69,790,
9,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,5,71,803,8,71,
10,71,12,71,806,9,71,1,71,3,71,809,8,71,1,72,1,72,1,72,1,72,1,72,1,72,3,
72,817,8,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,5,73,827,8,73,10,73,
12,73,830,9,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,
75,1,75,1,75,3,75,846,8,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,3,76,855,8,
76,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,3,78,866,8,78,1,78,3,78,
869,8,78,1,78,3,78,872,8,78,1,78,3,78,875,8,78,1,78,3,78,878,8,78,1,78,1,
78,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,81,3,81,892,8,81,1,81,
3,81,895,8,81,1,82,1,82,1,82,5,82,900,8,82,10,82,12,82,903,9,82,1,83,1,83,
1,83,1,83,5,83,909,8,83,10,83,12,83,912,9,83,1,83,1,83,1,83,5,83,917,8,83,
10,83,12,83,920,9,83,1,84,1,84,1,84,1,84,5,84,926,8,84,10,84,12,84,929,9,
84,1,84,1,84,1,84,5,84,934,8,84,10,84,12,84,937,9,84,1,85,1,85,1,85,1,85,
5,85,943,8,85,10,85,12,85,946,9,85,1,85,1,85,5,85,950,8,85,10,85,12,85,953,
9,85,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,3,86,963,8,86,1,86,3,86,966,
8,86,1,86,3,86,969,8,86,3,86,971,8,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,
1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,
87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,
1,87,1,87,1,87,1,87,3,87,1013,8,87,1,88,1,88,1,88,1,88,1,88,1,88,3,88,1021,
8,88,1,89,1,89,3,89,1025,8,89,1,89,5,89,1028,8,89,10,89,12,89,1031,9,89,
1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,93,1,93,1,93,1,94,1,94,1,95,1,
95,1,96,1,96,1,97,1,97,1,98,1,98,1,99,1,99,1,100,1,100,1,101,1,101,1,102,
1,102,1,103,1,103,1,103,1,104,1,104,1,104,1,105,1,105,1,105,1,106,1,106,
1,106,1,107,1,107,1,107,1,108,1,108,1,108,1,109,1,109,1,109,1,110,1,110,
1,110,1,111,1,111,1,111,1,112,1,112,1,112,1,113,1,113,1,113,1,113,1,114,
1,114,1,114,1,114,1,115,1,115,1,116,1,116,1,116,1,117,1,117,1,117,1,118,
1,118,1,119,1,119,1,120,1,120,1,120,1,121,1,121,1,121,1,122,1,122,1,123,
1,123,1,124,1,124,1,125,1,125,1,125,1,126,1,126,1,126,1,126,1,127,1,127,
1,127,1,127,1,128,1,128,1,129,1,129,1,130,1,130,1,131,1,131,1,131,1,132,
1,132,1,132,1,133,1,133,1,133,1,134,1,134,1,135,1,135,1,136,1,136,1,137,
1,137,1,138,1,138,1,139,1,139,1,140,1,140,1,141,1,141,1,142,1,142,4,657,
695,730,804,0,143,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,
48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,
139,70,141,71,143,0,145,72,147,73,149,74,151,0,153,0,155,0,157,0,159,0,161,
0,163,75,165,76,167,77,169,78,171,79,173,80,175,0,177,0,179,0,181,0,183,
0,185,0,187,81,189,82,191,83,193,84,195,85,197,86,199,87,201,88,203,89,205,
90,207,91,209,92,211,93,213,94,215,95,217,96,219,97,221,98,223,99,225,100,
227,101,229,102,231,103,233,104,235,105,237,106,239,107,241,108,243,109,
245,110,247,111,249,112,251,113,253,114,255,115,257,116,259,117,261,118,
263,119,265,120,267,121,269,122,271,123,273,124,275,125,277,126,279,127,
281,128,283,129,285,130,1,0,19,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,
122,2,0,33,33,47,47,2,0,10,10,13,13,2,0,33,33,42,42,1,0,42,42,1,0,47,47,
7,0,32,32,160,160,5760,5760,8192,8202,8239,8239,8287,8287,12288,12288,4,
0,9,10,13,13,39,39,92,92,1,0,34,34,5,0,48,48,92,92,110,110,114,114,116,116,
2,0,34,34,39,39,1,0,48,49,2,0,48,49,95,95,2,0,69,69,101,101,2,0,43,43,45,
45,1,0,48,55,1,0,48,57,3,0,48,57,65,70,97,102,1232,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,
61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,
0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,
0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,
0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,
0,149,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,
171,1,0,0,0,0,173,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,
1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,
0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,
0,0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,
0,0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,
0,235,1,0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,0,243,1,0,0,0,0,
245,1,0,0,0,0,247,1,0,0,0,0,249,1,0,0,0,0,251,1,0,0,0,0,253,1,0,0,0,0,255,
1,0,0,0,0,257,1,0,0,0,0,259,1,0,0,0,0,261,1,0,0,0,0,263,1,0,0,0,0,265,1,
0,0,0,0,267,1,0,0,0,0,269,1,0,0,0,0,271,1,0,0,0,0,273,1,0,0,0,0,275,1,0,
0,0,0,277,1,0,0,0,0,279,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,0,285,1,0,0,
0,1,287,1,0,0,0,3,290,1,0,0,0,5,296,1,0,0,0,7,302,1,0,0,0,9,311,1,0,0,0,
11,317,1,0,0,0,13,322,1,0,0,0,15,327,1,0,0,0,17,334,1,0,0,0,19,340,1,0,0,
0,21,343,1,0,0,0,23,347,1,0,0,0,25,350,1,0,0,0,27,355,1,0,0,0,29,358,1,0,
0,0,31,362,1,0,0,0,33,367,1,0,0,0,35,373,1,0,0,0,37,377,1,0,0,0,39,382,1,
0,0,0,41,386,1,0,0,0,43,390,1,0,0,0,45,394,1,0,0,0,47,401,1,0,0,0,49,406,
1,0,0,0,51,411,1,0,0,0,53,418,1,0,0,0,55,425,1,0,0,0,57,431,1,0,0,0,59,437,
1,0,0,0,61,442,1,0,0,0,63,447,1,0,0,0,65,454,1,0,0,0,67,458,1,0,0,0,69,464,
1,0,0,0,71,470,1,0,0,0,73,476,1,0,0,0,75,482,1,0,0,0,77,486,1,0,0,0,79,495,
1,0,0,0,81,502,1,0,0,0,83,506,1,0,0,0,85,509,1,0,0,0,87,515,1,0,0,0,89,521,
1,0,0,0,91,530,1,0,0,0,93,535,1,0,0,0,95,542,1,0,0,0,97,550,1,0,0,0,99,558,
1,0,0,0,101,564,1,0,0,0,103,568,1,0,0,0,105,574,1,0,0,0,107,582,1,0,0,0,
109,594,1,0,0,0,111,597,1,0,0,0,113,617,1,0,0,0,115,619,1,0,0,0,117,640,
1,0,0,0,119,671,1,0,0,0,121,675,1,0,0,0,123,687,1,0,0,0,125,703,1,0,0,0,
127,718,1,0,0,0,129,741,1,0,0,0,131,745,1,0,0,0,133,760,1,0,0,0,135,767,
1,0,0,0,137,771,1,0,0,0,139,780,1,0,0,0,141,793,1,0,0,0,143,808,1,0,0,0,
145,810,1,0,0,0,147,820,1,0,0,0,149,833,1,0,0,0,151,845,1,0,0,0,153,854,
1,0,0,0,155,856,1,0,0,0,157,859,1,0,0,0,159,881,1,0,0,0,161,884,1,0,0,0,
163,891,1,0,0,0,165,896,1,0,0,0,167,904,1,0,0,0,169,921,1,0,0,0,171,938,
1,0,0,0,173,954,1,0,0,0,175,1012,1,0,0,0,177,1020,1,0,0,0,179,1022,1,0,0,
0,181,1034,1,0,0,0,183,1036,1,0,0,0,185,1038,1,0,0,0,187,1040,1,0,0,0,189,
1043,1,0,0,0,191,1045,1,0,0,0,193,1047,1,0,0,0,195,1049,1,0,0,0,197,1051,
1,0,0,0,199,1053,1,0,0,0,201,1055,1,0,0,0,203,1057,1,0,0,0,205,1059,1,0,
0,0,207,1061,1,0,0,0,209,1064,1,0,0,0,211,1067,1,0,0,0,213,1070,1,0,0,0,
215,1073,1,0,0,0,217,1076,1,0,0,0,219,1079,1,0,0,0,221,1082,1,0,0,0,223,
1085,1,0,0,0,225,1088,1,0,0,0,227,1091,1,0,0,0,229,1095,1,0,0,0,231,1099,
1,0,0,0,233,1101,1,0,0,0,235,1104,1,0,0,0,237,1107,1,0,0,0,239,1109,1,0,
0,0,241,1111,1,0,0,0,243,1114,1,0,0,0,245,1117,1,0,0,0,247,1119,1,0,0,0,
249,1121,1,0,0,0,251,1123,1,0,0,0,253,1126,1,0,0,0,255,1130,1,0,0,0,257,
1134,1,0,0,0,259,1136,1,0,0,0,261,1138,1,0,0,0,263,1140,1,0,0,0,265,1143,
1,0,0,0,267,1146,1,0,0,0,269,1149,1,0,0,0,271,1151,1,0,0,0,273,1153,1,0,
0,0,275,1155,1,0,0,0,277,1157,1,0,0,0,279,1159,1,0,0,0,281,1161,1,0,0,0,
283,1163,1,0,0,0,285,1165,1,0,0,0,287,288,5,97,0,0,288,289,5,115,0,0,289,
2,1,0,0,0,290,291,5,98,0,0,291,292,5,114,0,0,292,293,5,101,0,0,293,294,5,
97,0,0,294,295,5,107,0,0,295,4,1,0,0,0,296,297,5,99,0,0,297,298,5,111,0,
0,298,299,5,110,0,0,299,300,5,115,0,0,300,301,5,116,0,0,301,6,1,0,0,0,302,
303,5,99,0,0,303,304,5,111,0,0,304,305,5,110,0,0,305,306,5,116,0,0,306,307,
5,105,0,0,307,308,5,110,0,0,308,309,5,117,0,0,309,310,5,101,0,0,310,8,1,
0,0,0,311,312,5,99,0,0,312,313,5,114,0,0,313,314,5,97,0,0,314,315,5,116,
0,0,315,316,5,101,0,0,316,10,1,0,0,0,317,318,5,101,0,0,318,319,5,108,0,0,
319,320,5,115,0,0,320,321,5,101,0,0,321,12,1,0,0,0,322,323,5,101,0,0,323,
324,5,110,0,0,324,325,5,117,0,0,325,326,5,109,0,0,326,14,1,0,0,0,327,328,
5,101,0,0,328,329,5,120,0,0,329,330,5,116,0,0,330,331,5,101,0,0,331,332,
5,114,0,0,332,333,5,110,0,0,333,16,1,0,0,0,334,335,5,102,0,0,335,336,5,97,
0,0,336,337,5,108,0,0,337,338,5,115,0,0,338,339,5,101,0,0,339,18,1,0,0,0,
340,341,5,102,0,0,341,342,5,110,0,0,342,20,1,0,0,0,343,344,5,102,0,0,344,
345,5,111,0,0,345,346,5,114,0,0,346,22,1,0,0,0,347,348,5,105,0,0,348,349,
5,102,0,0,349,24,1,0,0,0,350,351,5,105,0,0,351,352,5,109,0,0,352,353,5,112,
0,0,353,354,5,108,0,0,354,26,1,0,0,0,355,356,5,105,0,0,356,357,5,110,0,0,
357,28,1,0,0,0,358,359,5,108,0,0,359,360,5,101,0,0,360,361,5,116,0,0,361,
30,1,0,0,0,362,363,5,108,0,0,363,364,5,111,0,0,364,365,5,111,0,0,365,366,
5,112,0,0,366,32,1,0,0,0,367,368,5,109,0,0,368,369,5,97,0,0,369,370,5,116,
0,0,370,371,5,99,0,0,371,372,5,104,0,0,372,34,1,0,0,0,373,374,5,109,0,0,
374,375,5,111,0,0,375,376,5,100,0,0,376,36,1,0,0,0,377,378,5,109,0,0,378,
379,5,111,0,0,379,380,5,118,0,0,380,381,5,101,0,0,381,38,1,0,0,0,382,383,
5,109,0,0,383,384,5,117,0,0,384,385,5,116,0,0,385,40,1,0,0,0,386,387,5,112,
0,0,387,388,5,117,0,0,388,389,5,98,0,0,389,42,1,0,0,0,390,391,5,114,0,0,
391,392,5,101,0,0,392,393,5,102,0,0,393,44,1,0,0,0,394,395,5,114,0,0,395,
396,5,101,0,0,396,397,5,116,0,0,397,398,5,117,0,0,398,399,5,114,0,0,399,
400,5,110,0,0,400,46,1,0,0,0,401,402,5,115,0,0,402,403,5,101,0,0,403,404,
5,108,0,0,404,405,5,102,0,0,405,48,1,0,0,0,406,407,5,83,0,0,407,408,5,101,
0,0,408,409,5,108,0,0,409,410,5,102,0,0,410,50,1,0,0,0,411,412,5,115,0,0,
412,413,5,116,0,0,413,414,5,97,0,0,414,415,5,116,0,0,415,416,5,105,0,0,416,
417,5,99,0,0,417,52,1,0,0,0,418,419,5,115,0,0,419,420,5,116,0,0,420,421,
5,114,0,0,421,422,5,117,0,0,422,423,5,99,0,0,423,424,5,116,0,0,424,54,1,
0,0,0,425,426,5,115,0,0,426,427,5,117,0,0,427,428,5,112,0,0,428,429,5,101,
0,0,429,430,5,114,0,0,430,56,1,0,0,0,431,432,5,116,0,0,432,433,5,114,0,0,
433,434,5,97,0,0,434,435,5,105,0,0,435,436,5,116,0,0,436,58,1,0,0,0,437,
438,5,116,0,0,438,439,5,114,0,0,439,440,5,117,0,0,440,441,5,101,0,0,441,
60,1,0,0,0,442,443,5,116,0,0,443,444,5,121,0,0,444,445,5,112,0,0,445,446,
5,101,0,0,446,62,1,0,0,0,447,448,5,117,0,0,448,449,5,110,0,0,449,450,5,115,
0,0,450,451,5,97,0,0,451,452,5,102,0,0,452,453,5,101,0,0,453,64,1,0,0,0,
454,455,5,117,0,0,455,456,5,115,0,0,456,457,5,101,0,0,457,66,1,0,0,0,458,
459,5,119,0,0,459,460,5,104,0,0,460,461,5,101,0,0,461,462,5,114,0,0,462,
463,5,101,0,0,463,68,1,0,0,0,464,465,5,119,0,0,465,466,5,104,0,0,466,467,
5,105,0,0,467,468,5,108,0,0,468,469,5,101,0,0,469,70,1,0,0,0,470,471,5,97,
0,0,471,472,5,115,0,0,472,473,5,121,0,0,473,474,5,110,0,0,474,475,5,99,0,
0,475,72,1,0,0,0,476,477,5,97,0,0,477,478,5,119,0,0,478,479,5,97,0,0,479,
480,5,105,0,0,480,481,5,116,0,0,481,74,1,0,0,0,482,483,5,100,0,0,483,484,
5,121,0,0,484,485,5,110,0,0,485,76,1,0,0,0,486,487,5,97,0,0,487,488,5,98,
0,0,488,489,5,115,0,0,489,490,5,116,0,0,490,491,5,114,0,0,491,492,5,97,0,
0,492,493,5,99,0,0,493,494,5,116,0,0,494,78,1,0,0,0,495,496,5,98,0,0,496,
497,5,101,0,0,497,498,5,99,0,0,498,499,5,111,0,0,499,500,5,109,0,0,500,501,
5,101,0,0,501,80,1,0,0,0,502,503,5,98,0,0,503,504,5,111,0,0,504,505,5,120,
0,0,505,82,1,0,0,0,506,507,5,100,0,0,507,508,5,111,0,0,508,84,1,0,0,0,509,
510,5,102,0,0,510,511,5,105,0,0,511,512,5,110,0,0,512,513,5,97,0,0,513,514,
5,108,0,0,514,86,1,0,0,0,515,516,5,109,0,0,516,517,5,97,0,0,517,518,5,99,
0,0,518,519,5,114,0,0,519,520,5,111,0,0,520,88,1,0,0,0,521,522,5,111,0,0,
522,523,5,118,0,0,523,524,5,101,0,0,524,525,5,114,0,0,525,526,5,114,0,0,
526,527,5,105,0,0,527,528,5,100,0,0,528,529,5,101,0,0,529,90,1,0,0,0,530,
531,5,112,0,0,531,532,5,114,0,0,532,533,5,105,0,0,533,534,5,118,0,0,534,
92,1,0,0,0,535,536,5,116,0,0,536,537,5,121,0,0,537,538,5,112,0,0,538,539,
5,101,0,0,539,540,5,111,0,0,540,541,5,102,0,0,541,94,1,0,0,0,542,543,5,117,
0,0,543,544,5,110,0,0,544,545,5,115,0,0,545,546,5,105,0,0,546,547,5,122,
0,0,547,548,5,101,0,0,548,549,5,100,0,0,549,96,1,0,0,0,550,551,5,118,0,0,
551,552,5,105,0,0,552,553,5,114,0,0,553,554,5,116,0,0,554,555,5,117,0,0,
555,556,5,97,0,0,556,557,5,108,0,0,557,98,1,0,0,0,558,559,5,121,0,0,559,
560,5,105,0,0,560,561,5,101,0,0,561,562,5,108,0,0,562,563,5,100,0,0,563,
100,1,0,0,0,564,565,5,116,0,0,565,566,5,114,0,0,566,567,5,121,0,0,567,102,
1,0,0,0,568,569,5,117,0,0,569,570,5,110,0,0,570,571,5,105,0,0,571,572,5,
111,0,0,572,573,5,110,0,0,573,104,1,0,0,0,574,575,5,39,0,0,575,576,5,115,
0,0,576,577,5,116,0,0,577,578,5,97,0,0,578,579,5,116,0,0,579,580,5,105,0,
0,580,581,5,99,0,0,581,106,1,0,0,0,582,583,5,109,0,0,583,584,5,97,0,0,584,
585,5,99,0,0,585,586,5,114,0,0,586,587,5,111,0,0,587,588,5,95,0,0,588,589,
5,114,0,0,589,590,5,117,0,0,590,591,5,108,0,0,591,592,5,101,0,0,592,593,
5,115,0,0,593,108,1,0,0,0,594,595,5,39,0,0,595,596,5,95,0,0,596,110,1,0,
0,0,597,598,5,36,0,0,598,599,5,99,0,0,599,600,5,114,0,0,600,601,5,97,0,0,
601,602,5,116,0,0,602,603,5,101,0,0,603,112,1,0,0,0,604,608,7,0,0,0,605,
607,7,1,0,0,606,605,1,0,0,0,607,610,1,0,0,0,608,606,1,0,0,0,608,609,1,0,
0,0,609,618,1,0,0,0,610,608,1,0,0,0,611,613,5,95,0,0,612,614,7,1,0,0,613,
612,1,0,0,0,614,615,1,0,0,0,615,613,1,0,0,0,615,616,1,0,0,0,616,618,1,0,
0,0,617,604,1,0,0,0,617,611,1,0,0,0,618,114,1,0,0,0,619,620,5,114,0,0,620,
621,5,35,0,0,621,622,1,0,0,0,622,623,3,113,56,0,623,116,1,0,0,0,624,625,
5,47,0,0,625,626,5,47,0,0,626,630,1,0,0,0,627,631,8,2,0,0,628,629,5,47,0,
0,629,631,5,47,0,0,630,627,1,0,0,0,630,628,1,0,0,0,631,635,1,0,0,0,632,634,
8,3,0,0,633,632,1,0,0,0,634,637,1,0,0,0,635,633,1,0,0,0,635,636,1,0,0,0,
636,641,1,0,0,0,637,635,1,0,0,0,638,639,5,47,0,0,639,641,5,47,0,0,640,624,
1,0,0,0,640,638,1,0,0,0,641,642,1,0,0,0,642,643,6,58,0,0,643,118,1,0,0,0,
644,645,5,47,0,0,645,646,5,42,0,0,646,651,1,0,0,0,647,652,8,4,0,0,648,649,
5,42,0,0,649,652,5,42,0,0,650,652,3,129,64,0,651,647,1,0,0,0,651,648,1,0,
0,0,651,650,1,0,0,0,652,657,1,0,0,0,653,656,3,129,64,0,654,656,8,5,0,0,655,
653,1,0,0,0,655,654,1,0,0,0,656,659,1,0,0,0,657,658,1,0,0,0,657,655,1,0,
0,0,658,660,1,0,0,0,659,657,1,0,0,0,660,661,5,42,0,0,661,672,5,47,0,0,662,
663,5,47,0,0,663,664,5,42,0,0,664,665,5,42,0,0,665,672,5,47,0,0,666,667,
5,47,0,0,667,668,5,42,0,0,668,669,5,42,0,0,669,670,5,42,0,0,670,672,5,47,
0,0,671,644,1,0,0,0,671,662,1,0,0,0,671,666,1,0,0,0,672,673,1,0,0,0,673,
674,6,59,0,0,674,120,1,0,0,0,675,676,5,47,0,0,676,677,5,47,0,0,677,678,5,
33,0,0,678,682,1,0,0,0,679,681,8,3,0,0,680,679,1,0,0,0,681,684,1,0,0,0,682,
680,1,0,0,0,682,683,1,0,0,0,683,685,1,0,0,0,684,682,1,0,0,0,685,686,6,60,
0,0,686,122,1,0,0,0,687,688,5,47,0,0,688,689,5,42,0,0,689,690,5,33,0,0,690,
695,1,0,0,0,691,694,3,129,64,0,692,694,8,5,0,0,693,691,1,0,0,0,693,692,1,
0,0,0,694,697,1,0,0,0,695,696,1,0,0,0,695,693,1,0,0,0,696,698,1,0,0,0,697,
695,1,0,0,0,698,699,5,42,0,0,699,700,5,47,0,0,700,701,1,0,0,0,701,702,6,
61,0,0,702,124,1,0,0,0,703,704,5,47,0,0,704,705,5,47,0,0,705,706,5,47,0,
0,706,714,1,0,0,0,707,711,8,6,0,0,708,710,8,3,0,0,709,708,1,0,0,0,710,713,
1,0,0,0,711,709,1,0,0,0,711,712,1,0,0,0,712,715,1,0,0,0,713,711,1,0,0,0,
714,707,1,0,0,0,714,715,1,0,0,0,715,716,1,0,0,0,716,717,6,62,0,0,717,126,
1,0,0,0,718,719,5,47,0,0,719,720,5,42,0,0,720,721,5,42,0,0,721,724,1,0,0,
0,722,725,8,5,0,0,723,725,3,129,64,0,724,722,1,0,0,0,724,723,1,0,0,0,725,
730,1,0,0,0,726,729,3,129,64,0,727,729,8,5,0,0,728,726,1,0,0,0,728,727,1,
0,0,0,729,732,1,0,0,0,730,731,1,0,0,0,730,728,1,0,0,0,731,733,1,0,0,0,732,
730,1,0,0,0,733,734,5,42,0,0,734,735,5,47,0,0,735,736,1,0,0,0,736,737,6,
63,0,0,737,128,1,0,0,0,738,742,3,119,59,0,739,742,3,123,61,0,740,742,3,127,
63,0,741,738,1,0,0,0,741,739,1,0,0,0,741,740,1,0,0,0,742,743,1,0,0,0,743,
744,6,64,0,0,744,130,1,0,0,0,745,747,4,65,0,0,746,748,5,65279,0,0,747,746,
1,0,0,0,747,748,1,0,0,0,748,749,1,0,0,0,749,750,5,35,0,0,750,751,5,33,0,
0,751,755,1,0,0,0,752,754,8,3,0,0,753,752,1,0,0,0,754,757,1,0,0,0,755,753,
1,0,0,0,755,756,1,0,0,0,756,758,1,0,0,0,757,755,1,0,0,0,758,759,6,65,0,0,
759,132,1,0,0,0,760,761,7,7,0,0,761,762,1,0,0,0,762,763,6,66,0,0,763,134,
1,0,0,0,764,765,5,13,0,0,765,768,5,10,0,0,766,768,7,3,0,0,767,764,1,0,0,
0,767,766,1,0,0,0,768,769,1,0,0,0,769,770,6,67,0,0,770,136,1,0,0,0,771,776,
5,39,0,0,772,777,8,8,0,0,773,777,3,159,79,0,774,777,3,151,75,0,775,777,3,
157,78,0,776,772,1,0,0,0,776,773,1,0,0,0,776,774,1,0,0,0,776,775,1,0,0,0,
777,778,1,0,0,0,778,779,5,39,0,0,779,138,1,0,0,0,780,788,5,34,0,0,781,787,
8,9,0,0,782,787,3,159,79,0,783,787,3,151,75,0,784,787,3,157,78,0,785,787,
3,161,80,0,786,781,1,0,0,0,786,782,1,0,0,0,786,783,1,0,0,0,786,784,1,0,0,
0,786,785,1,0,0,0,787,790,1,0,0,0,788,786,1,0,0,0,788,789,1,0,0,0,789,791,
1,0,0,0,790,788,1,0,0,0,791,792,5,34,0,0,792,140,1,0,0,0,793,794,5,114,0,
0,794,795,3,143,71,0,795,142,1,0,0,0,796,797,5,35,0,0,797,798,3,143,71,0,
798,799,5,35,0,0,799,809,1,0,0,0,800,804,5,34,0,0,801,803,9,0,0,0,802,801,
1,0,0,0,803,806,1,0,0,0,804,805,1,0,0,0,804,802,1,0,0,0,805,807,1,0,0,0,
806,804,1,0,0,0,807,809,5,34,0,0,808,796,1,0,0,0,808,800,1,0,0,0,809,144,
1,0,0,0,810,811,5,98,0,0,811,812,5,39,0,0,812,816,1,0,0,0,813,817,9,0,0,
0,814,817,3,159,79,0,815,817,3,153,76,0,816,813,1,0,0,0,816,814,1,0,0,0,
816,815,1,0,0,0,817,818,1,0,0,0,818,819,5,39,0,0,819,146,1,0,0,0,820,821,
5,98,0,0,821,822,5,34,0,0,822,828,1,0,0,0,823,827,8,9,0,0,824,827,3,159,
79,0,825,827,3,153,76,0,826,823,1,0,0,0,826,824,1,0,0,0,826,825,1,0,0,0,
827,830,1,0,0,0,828,826,1,0,0,0,828,829,1,0,0,0,829,831,1,0,0,0,830,828,
1,0,0,0,831,832,5,34,0,0,832,148,1,0,0,0,833,834,5,98,0,0,834,835,5,114,
0,0,835,836,1,0,0,0,836,837,3,143,71,0,837,150,1,0,0,0,838,839,5,92,0,0,
839,840,5,120,0,0,840,841,1,0,0,0,841,842,3,181,90,0,842,843,3,185,92,0,
843,846,1,0,0,0,844,846,3,155,77,0,845,838,1,0,0,0,845,844,1,0,0,0,846,152,
1,0,0,0,847,848,5,92,0,0,848,849,5,120,0,0,849,850,1,0,0,0,850,851,3,185,
92,0,851,852,3,185,92,0,852,855,1,0,0,0,853,855,3,155,77,0,854,847,1,0,0,
0,854,853,1,0,0,0,855,154,1,0,0,0,856,857,5,92,0,0,857,858,7,10,0,0,858,
156,1,0,0,0,859,860,5,92,0,0,860,861,5,117,0,0,861,862,5,123,0,0,862,863,
1,0,0,0,863,865,3,185,92,0,864,866,3,185,92,0,865,864,1,0,0,0,865,866,1,
0,0,0,866,868,1,0,0,0,867,869,3,185,92,0,868,867,1,0,0,0,868,869,1,0,0,0,
869,871,1,0,0,0,870,872,3,185,92,0,871,870,1,0,0,0,871,872,1,0,0,0,872,874,
1,0,0,0,873,875,3,185,92,0,874,873,1,0,0,0,874,875,1,0,0,0,875,877,1,0,0,
0,876,878,3,185,92,0,877,876,1,0,0,0,877,878,1,0,0,0,878,879,1,0,0,0,879,
880,5,125,0,0,880,158,1,0,0,0,881,882,5,92,0,0,882,883,7,11,0,0,883,160,
1,0,0,0,884,885,5,92,0,0,885,886,5,10,0,0,886,162,1,0,0,0,887,892,3,165,
82,0,888,892,3,171,85,0,889,892,3,169,84,0,890,892,3,167,83,0,891,887,1,
0,0,0,891,888,1,0,0,0,891,889,1,0,0,0,891,890,1,0,0,0,892,894,1,0,0,0,893,
895,3,175,87,0,894,893,1,0,0,0,894,895,1,0,0,0,895,164,1,0,0,0,896,901,3,
183,91,0,897,900,3,183,91,0,898,900,5,95,0,0,899,897,1,0,0,0,899,898,1,0,
0,0,900,903,1,0,0,0,901,899,1,0,0,0,901,902,1,0,0,0,902,166,1,0,0,0,903,
901,1,0,0,0,904,905,5,48,0,0,905,906,5,120,0,0,906,910,1,0,0,0,907,909,5,
95,0,0,908,907,1,0,0,0,909,912,1,0,0,0,910,908,1,0,0,0,910,911,1,0,0,0,911,
913,1,0,0,0,912,910,1,0,0,0,913,918,3,185,92,0,914,917,3,185,92,0,915,917,
5,95,0,0,916,914,1,0,0,0,916,915,1,0,0,0,917,920,1,0,0,0,918,916,1,0,0,0,
918,919,1,0,0,0,919,168,1,0,0,0,920,918,1,0,0,0,921,922,5,48,0,0,922,923,
5,111,0,0,923,927,1,0,0,0,924,926,5,95,0,0,925,924,1,0,0,0,926,929,1,0,0,
0,927,925,1,0,0,0,927,928,1,0,0,0,928,930,1,0,0,0,929,927,1,0,0,0,930,935,
3,181,90,0,931,934,3,181,90,0,932,934,5,95,0,0,933,931,1,0,0,0,933,932,1,
0,0,0,934,937,1,0,0,0,935,933,1,0,0,0,935,936,1,0,0,0,936,170,1,0,0,0,937,
935,1,0,0,0,938,939,5,48,0,0,939,940,5,98,0,0,940,944,1,0,0,0,941,943,5,
95,0,0,942,941,1,0,0,0,943,946,1,0,0,0,944,942,1,0,0,0,944,945,1,0,0,0,945,
947,1,0,0,0,946,944,1,0,0,0,947,951,7,12,0,0,948,950,7,13,0,0,949,948,1,
0,0,0,950,953,1,0,0,0,951,949,1,0,0,0,951,952,1,0,0,0,952,172,1,0,0,0,953,
951,1,0,0,0,954,970,4,86,1,0,955,956,3,165,82,0,956,957,5,46,0,0,957,958,
4,86,2,0,958,971,1,0,0,0,959,962,3,165,82,0,960,961,5,46,0,0,961,963,3,165,
82,0,962,960,1,0,0,0,962,963,1,0,0,0,963,965,1,0,0,0,964,966,3,179,89,0,
965,964,1,0,0,0,965,966,1,0,0,0,966,968,1,0,0,0,967,969,3,177,88,0,968,967,
1,0,0,0,968,969,1,0,0,0,969,971,1,0,0,0,970,955,1,0,0,0,970,959,1,0,0,0,
971,174,1,0,0,0,972,973,5,117,0,0,973,1013,5,56,0,0,974,975,5,117,0,0,975,
976,5,49,0,0,976,1013,5,54,0,0,977,978,5,117,0,0,978,979,5,51,0,0,979,1013,
5,50,0,0,980,981,5,117,0,0,981,982,5,54,0,0,982,1013,5,52,0,0,983,984,5,
117,0,0,984,985,5,49,0,0,985,986,5,50,0,0,986,1013,5,56,0,0,987,988,5,117,
0,0,988,989,5,115,0,0,989,990,5,105,0,0,990,991,5,122,0,0,991,1013,5,101,
0,0,992,993,5,105,0,0,993,1013,5,56,0,0,994,995,5,105,0,0,995,996,5,49,0,
0,996,1013,5,54,0,0,997,998,5,105,0,0,998,999,5,51,0,0,999,1013,5,50,0,0,
1000,1001,5,105,0,0,1001,1002,5,54,0,0,1002,1013,5,52,0,0,1003,1004,5,105,
0,0,1004,1005,5,49,0,0,1005,1006,5,50,0,0,1006,1013,5,56,0,0,1007,1008,5,
105,0,0,1008,1009,5,115,0,0,1009,1010,5,105,0,0,1010,1011,5,122,0,0,1011,
1013,5,101,0,0,1012,972,1,0,0,0,1012,974,1,0,0,0,1012,977,1,0,0,0,1012,980,
1,0,0,0,1012,983,1,0,0,0,1012,987,1,0,0,0,1012,992,1,0,0,0,1012,994,1,0,
0,0,1012,997,1,0,0,0,1012,1000,1,0,0,0,1012,1003,1,0,0,0,1012,1007,1,0,0,
0,1013,176,1,0,0,0,1014,1015,5,102,0,0,1015,1016,5,51,0,0,1016,1021,5,50,
0,0,1017,1018,5,102,0,0,1018,1019,5,54,0,0,1019,1021,5,52,0,0,1020,1014,
1,0,0,0,1020,1017,1,0,0,0,1021,178,1,0,0,0,1022,1024,7,14,0,0,1023,1025,
7,15,0,0,1024,1023,1,0,0,0,1024,1025,1,0,0,0,1025,1029,1,0,0,0,1026,1028,
5,95,0,0,1027,1026,1,0,0,0,1028,1031,1,0,0,0,1029,1027,1,0,0,0,1029,1030,
1,0,0,0,1030,1032,1,0,0,0,1031,1029,1,0,0,0,1032,1033,3,165,82,0,1033,180,
1,0,0,0,1034,1035,7,16,0,0,1035,182,1,0,0,0,1036,1037,7,17,0,0,1037,184,
1,0,0,0,1038,1039,7,18,0,0,1039,186,1,0,0,0,1040,1041,5,39,0,0,1041,1042,
3,113,56,0,1042,188,1,0,0,0,1043,1044,5,43,0,0,1044,190,1,0,0,0,1045,1046,
5,45,0,0,1046,192,1,0,0,0,1047,1048,5,42,0,0,1048,194,1,0,0,0,1049,1050,
5,47,0,0,1050,196,1,0,0,0,1051,1052,5,37,0,0,1052,198,1,0,0,0,1053,1054,
5,94,0,0,1054,200,1,0,0,0,1055,1056,5,33,0,0,1056,202,1,0,0,0,1057,1058,
5,38,0,0,1058,204,1,0,0,0,1059,1060,5,124,0,0,1060,206,1,0,0,0,1061,1062,
5,38,0,0,1062,1063,5,38,0,0,1063,208,1,0,0,0,1064,1065,5,124,0,0,1065,1066,
5,124,0,0,1066,210,1,0,0,0,1067,1068,5,43,0,0,1068,1069,5,61,0,0,1069,212,
1,0,0,0,1070,1071,5,45,0,0,1071,1072,5,61,0,0,1072,214,1,0,0,0,1073,1074,
5,42,0,0,1074,1075,5,61,0,0,1075,216,1,0,0,0,1076,1077,5,47,0,0,1077,1078,
5,61,0,0,1078,218,1,0,0,0,1079,1080,5,37,0,0,1080,1081,5,61,0,0,1081,220,
1,0,0,0,1082,1083,5,94,0,0,1083,1084,5,61,0,0,1084,222,1,0,0,0,1085,1086,
5,38,0,0,1086,1087,5,61,0,0,1087,224,1,0,0,0,1088,1089,5,124,0,0,1089,1090,
5,61,0,0,1090,226,1,0,0,0,1091,1092,5,60,0,0,1092,1093,5,60,0,0,1093,1094,
5,61,0,0,1094,228,1,0,0,0,1095,1096,5,62,0,0,1096,1097,5,62,0,0,1097,1098,
5,61,0,0,1098,230,1,0,0,0,1099,1100,5,61,0,0,1100,232,1,0,0,0,1101,1102,
5,61,0,0,1102,1103,5,61,0,0,1103,234,1,0,0,0,1104,1105,5,33,0,0,1105,1106,
5,61,0,0,1106,236,1,0,0,0,1107,1108,5,62,0,0,1108,238,1,0,0,0,1109,1110,
5,60,0,0,1110,240,1,0,0,0,1111,1112,5,62,0,0,1112,1113,5,61,0,0,1113,242,
1,0,0,0,1114,1115,5,60,0,0,1115,1116,5,61,0,0,1116,244,1,0,0,0,1117,1118,
5,64,0,0,1118,246,1,0,0,0,1119,1120,5,95,0,0,1120,248,1,0,0,0,1121,1122,
5,46,0,0,1122,250,1,0,0,0,1123,1124,5,46,0,0,1124,1125,5,46,0,0,1125,252,
1,0,0,0,1126,1127,5,46,0,0,1127,1128,5,46,0,0,1128,1129,5,46,0,0,1129,254,
1,0,0,0,1130,1131,5,46,0,0,1131,1132,5,46,0,0,1132,1133,5,61,0,0,1133,256,
1,0,0,0,1134,1135,5,44,0,0,1135,258,1,0,0,0,1136,1137,5,59,0,0,1137,260,
1,0,0,0,1138,1139,5,58,0,0,1139,262,1,0,0,0,1140,1141,5,58,0,0,1141,1142,
5,58,0,0,1142,264,1,0,0,0,1143,1144,5,45,0,0,1144,1145,5,62,0,0,1145,266,
1,0,0,0,1146,1147,5,61,0,0,1147,1148,5,62,0,0,1148,268,1,0,0,0,1149,1150,
5,35,0,0,1150,270,1,0,0,0,1151,1152,5,36,0,0,1152,272,1,0,0,0,1153,1154,
5,63,0,0,1154,274,1,0,0,0,1155,1156,5,123,0,0,1156,276,1,0,0,0,1157,1158,
5,125,0,0,1158,278,1,0,0,0,1159,1160,5,91,0,0,1160,280,1,0,0,0,1161,1162,
5,93,0,0,1162,282,1,0,0,0,1163,1164,5,40,0,0,1164,284,1,0,0,0,1165,1166,
5,41,0,0,1166,286,1,0,0,0,58,0,608,615,617,630,635,640,651,655,657,671,682,
693,695,711,714,724,728,730,741,747,755,767,776,786,788,804,808,816,826,
828,845,854,865,868,871,874,877,891,894,899,901,910,916,918,927,933,935,
944,951,962,965,968,970,1012,1020,1024,1029,1,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RustLexer extends RustLexerBase {

    static grammarFileName = "RustLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'as'", "'break'", "'const'", "'continue'", 
                         "'crate'", "'else'", "'enum'", "'extern'", "'false'", 
                         "'fn'", "'for'", "'if'", "'impl'", "'in'", "'let'", 
                         "'loop'", "'match'", "'mod'", "'move'", "'mut'", 
                         "'pub'", "'ref'", "'return'", "'self'", "'Self'", 
                         "'static'", "'struct'", "'super'", "'trait'", "'true'", 
                         "'type'", "'unsafe'", "'use'", "'where'", "'while'", 
                         "'async'", "'await'", "'dyn'", "'abstract'", "'become'", 
                         "'box'", "'do'", "'final'", "'macro'", "'override'", 
                         "'priv'", "'typeof'", "'unsized'", "'virtual'", 
                         "'yield'", "'try'", "'union'", "''static'", "'macro_rules'", 
                         "''_'", "'$crate'", null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, "'+'", "'-'", "'*'", "'/'", 
                         "'%'", "'^'", "'!'", "'&'", "'|'", "'&&'", "'||'", 
                         "'+='", "'-='", "'*='", "'/='", "'%='", "'^='", 
                         "'&='", "'|='", "'<<='", "'>>='", "'='", "'=='", 
                         "'!='", "'>'", "'<'", "'>='", "'<='", "'@'", "'_'", 
                         "'.'", "'..'", "'...'", "'..='", "','", "';'", 
                         "':'", "'::'", "'->'", "'=>'", "'#'", "'$'", "'?'", 
                         "'{'", "'}'", "'['", "']'", "'('", "')'" ];
	static symbolicNames = [ null, "KW_AS", "KW_BREAK", "KW_CONST", "KW_CONTINUE", 
                          "KW_CRATE", "KW_ELSE", "KW_ENUM", "KW_EXTERN", 
                          "KW_FALSE", "KW_FN", "KW_FOR", "KW_IF", "KW_IMPL", 
                          "KW_IN", "KW_LET", "KW_LOOP", "KW_MATCH", "KW_MOD", 
                          "KW_MOVE", "KW_MUT", "KW_PUB", "KW_REF", "KW_RETURN", 
                          "KW_SELFVALUE", "KW_SELFTYPE", "KW_STATIC", "KW_STRUCT", 
                          "KW_SUPER", "KW_TRAIT", "KW_TRUE", "KW_TYPE", 
                          "KW_UNSAFE", "KW_USE", "KW_WHERE", "KW_WHILE", 
                          "KW_ASYNC", "KW_AWAIT", "KW_DYN", "KW_ABSTRACT", 
                          "KW_BECOME", "KW_BOX", "KW_DO", "KW_FINAL", "KW_MACRO", 
                          "KW_OVERRIDE", "KW_PRIV", "KW_TYPEOF", "KW_UNSIZED", 
                          "KW_VIRTUAL", "KW_YIELD", "KW_TRY", "KW_UNION", 
                          "KW_STATICLIFETIME", "KW_MACRORULES", "KW_UNDERLINELIFETIME", 
                          "KW_DOLLARCRATE", "NON_KEYWORD_IDENTIFIER", "RAW_IDENTIFIER", 
                          "LINE_COMMENT", "BLOCK_COMMENT", "INNER_LINE_DOC", 
                          "INNER_BLOCK_DOC", "OUTER_LINE_DOC", "OUTER_BLOCK_DOC", 
                          "BLOCK_COMMENT_OR_DOC", "SHEBANG", "WHITESPACE", 
                          "NEWLINE", "CHAR_LITERAL", "STRING_LITERAL", "RAW_STRING_LITERAL", 
                          "BYTE_LITERAL", "BYTE_STRING_LITERAL", "RAW_BYTE_STRING_LITERAL", 
                          "INTEGER_LITERAL", "DEC_LITERAL", "HEX_LITERAL", 
                          "OCT_LITERAL", "BIN_LITERAL", "FLOAT_LITERAL", 
                          "LIFETIME_OR_LABEL", "PLUS", "MINUS", "STAR", 
                          "SLASH", "PERCENT", "CARET", "NOT", "AND", "OR", 
                          "ANDAND", "OROR", "PLUSEQ", "MINUSEQ", "STAREQ", 
                          "SLASHEQ", "PERCENTEQ", "CARETEQ", "ANDEQ", "OREQ", 
                          "SHLEQ", "SHREQ", "EQ", "EQEQ", "NE", "GT", "LT", 
                          "GE", "LE", "AT", "UNDERSCORE", "DOT", "DOTDOT", 
                          "DOTDOTDOT", "DOTDOTEQ", "COMMA", "SEMI", "COLON", 
                          "PATHSEP", "RARROW", "FATARROW", "POUND", "DOLLAR", 
                          "QUESTION", "LCURLYBRACE", "RCURLYBRACE", "LSQUAREBRACKET", 
                          "RSQUAREBRACKET", "LPAREN", "RPAREN" ];
	static ruleNames = [ "KW_AS", "KW_BREAK", "KW_CONST", "KW_CONTINUE", "KW_CRATE", 
                      "KW_ELSE", "KW_ENUM", "KW_EXTERN", "KW_FALSE", "KW_FN", 
                      "KW_FOR", "KW_IF", "KW_IMPL", "KW_IN", "KW_LET", "KW_LOOP", 
                      "KW_MATCH", "KW_MOD", "KW_MOVE", "KW_MUT", "KW_PUB", 
                      "KW_REF", "KW_RETURN", "KW_SELFVALUE", "KW_SELFTYPE", 
                      "KW_STATIC", "KW_STRUCT", "KW_SUPER", "KW_TRAIT", 
                      "KW_TRUE", "KW_TYPE", "KW_UNSAFE", "KW_USE", "KW_WHERE", 
                      "KW_WHILE", "KW_ASYNC", "KW_AWAIT", "KW_DYN", "KW_ABSTRACT", 
                      "KW_BECOME", "KW_BOX", "KW_DO", "KW_FINAL", "KW_MACRO", 
                      "KW_OVERRIDE", "KW_PRIV", "KW_TYPEOF", "KW_UNSIZED", 
                      "KW_VIRTUAL", "KW_YIELD", "KW_TRY", "KW_UNION", "KW_STATICLIFETIME", 
                      "KW_MACRORULES", "KW_UNDERLINELIFETIME", "KW_DOLLARCRATE", 
                      "NON_KEYWORD_IDENTIFIER", "RAW_IDENTIFIER", "LINE_COMMENT", 
                      "BLOCK_COMMENT", "INNER_LINE_DOC", "INNER_BLOCK_DOC", 
                      "OUTER_LINE_DOC", "OUTER_BLOCK_DOC", "BLOCK_COMMENT_OR_DOC", 
                      "SHEBANG", "WHITESPACE", "NEWLINE", "CHAR_LITERAL", 
                      "STRING_LITERAL", "RAW_STRING_LITERAL", "RAW_STRING_CONTENT", 
                      "BYTE_LITERAL", "BYTE_STRING_LITERAL", "RAW_BYTE_STRING_LITERAL", 
                      "ASCII_ESCAPE", "BYTE_ESCAPE", "COMMON_ESCAPE", "UNICODE_ESCAPE", 
                      "QUOTE_ESCAPE", "ESC_NEWLINE", "INTEGER_LITERAL", 
                      "DEC_LITERAL", "HEX_LITERAL", "OCT_LITERAL", "BIN_LITERAL", 
                      "FLOAT_LITERAL", "INTEGER_SUFFIX", "FLOAT_SUFFIX", 
                      "FLOAT_EXPONENT", "OCT_DIGIT", "DEC_DIGIT", "HEX_DIGIT", 
                      "LIFETIME_OR_LABEL", "PLUS", "MINUS", "STAR", "SLASH", 
                      "PERCENT", "CARET", "NOT", "AND", "OR", "ANDAND", 
                      "OROR", "PLUSEQ", "MINUSEQ", "STAREQ", "SLASHEQ", 
                      "PERCENTEQ", "CARETEQ", "ANDEQ", "OREQ", "SHLEQ", 
                      "SHREQ", "EQ", "EQEQ", "NE", "GT", "LT", "GE", "LE", 
                      "AT", "UNDERSCORE", "DOT", "DOTDOT", "DOTDOTDOT", 
                      "DOTDOTEQ", "COMMA", "SEMI", "COLON", "PATHSEP", "RARROW", 
                      "FATARROW", "POUND", "DOLLAR", "QUESTION", "LCURLYBRACE", 
                      "RCURLYBRACE", "LSQUAREBRACKET", "RSQUAREBRACKET", 
                      "LPAREN", "RPAREN" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

RustLexer.EOF = antlr4.Token.EOF;
RustLexer.KW_AS = 1;
RustLexer.KW_BREAK = 2;
RustLexer.KW_CONST = 3;
RustLexer.KW_CONTINUE = 4;
RustLexer.KW_CRATE = 5;
RustLexer.KW_ELSE = 6;
RustLexer.KW_ENUM = 7;
RustLexer.KW_EXTERN = 8;
RustLexer.KW_FALSE = 9;
RustLexer.KW_FN = 10;
RustLexer.KW_FOR = 11;
RustLexer.KW_IF = 12;
RustLexer.KW_IMPL = 13;
RustLexer.KW_IN = 14;
RustLexer.KW_LET = 15;
RustLexer.KW_LOOP = 16;
RustLexer.KW_MATCH = 17;
RustLexer.KW_MOD = 18;
RustLexer.KW_MOVE = 19;
RustLexer.KW_MUT = 20;
RustLexer.KW_PUB = 21;
RustLexer.KW_REF = 22;
RustLexer.KW_RETURN = 23;
RustLexer.KW_SELFVALUE = 24;
RustLexer.KW_SELFTYPE = 25;
RustLexer.KW_STATIC = 26;
RustLexer.KW_STRUCT = 27;
RustLexer.KW_SUPER = 28;
RustLexer.KW_TRAIT = 29;
RustLexer.KW_TRUE = 30;
RustLexer.KW_TYPE = 31;
RustLexer.KW_UNSAFE = 32;
RustLexer.KW_USE = 33;
RustLexer.KW_WHERE = 34;
RustLexer.KW_WHILE = 35;
RustLexer.KW_ASYNC = 36;
RustLexer.KW_AWAIT = 37;
RustLexer.KW_DYN = 38;
RustLexer.KW_ABSTRACT = 39;
RustLexer.KW_BECOME = 40;
RustLexer.KW_BOX = 41;
RustLexer.KW_DO = 42;
RustLexer.KW_FINAL = 43;
RustLexer.KW_MACRO = 44;
RustLexer.KW_OVERRIDE = 45;
RustLexer.KW_PRIV = 46;
RustLexer.KW_TYPEOF = 47;
RustLexer.KW_UNSIZED = 48;
RustLexer.KW_VIRTUAL = 49;
RustLexer.KW_YIELD = 50;
RustLexer.KW_TRY = 51;
RustLexer.KW_UNION = 52;
RustLexer.KW_STATICLIFETIME = 53;
RustLexer.KW_MACRORULES = 54;
RustLexer.KW_UNDERLINELIFETIME = 55;
RustLexer.KW_DOLLARCRATE = 56;
RustLexer.NON_KEYWORD_IDENTIFIER = 57;
RustLexer.RAW_IDENTIFIER = 58;
RustLexer.LINE_COMMENT = 59;
RustLexer.BLOCK_COMMENT = 60;
RustLexer.INNER_LINE_DOC = 61;
RustLexer.INNER_BLOCK_DOC = 62;
RustLexer.OUTER_LINE_DOC = 63;
RustLexer.OUTER_BLOCK_DOC = 64;
RustLexer.BLOCK_COMMENT_OR_DOC = 65;
RustLexer.SHEBANG = 66;
RustLexer.WHITESPACE = 67;
RustLexer.NEWLINE = 68;
RustLexer.CHAR_LITERAL = 69;
RustLexer.STRING_LITERAL = 70;
RustLexer.RAW_STRING_LITERAL = 71;
RustLexer.BYTE_LITERAL = 72;
RustLexer.BYTE_STRING_LITERAL = 73;
RustLexer.RAW_BYTE_STRING_LITERAL = 74;
RustLexer.INTEGER_LITERAL = 75;
RustLexer.DEC_LITERAL = 76;
RustLexer.HEX_LITERAL = 77;
RustLexer.OCT_LITERAL = 78;
RustLexer.BIN_LITERAL = 79;
RustLexer.FLOAT_LITERAL = 80;
RustLexer.LIFETIME_OR_LABEL = 81;
RustLexer.PLUS = 82;
RustLexer.MINUS = 83;
RustLexer.STAR = 84;
RustLexer.SLASH = 85;
RustLexer.PERCENT = 86;
RustLexer.CARET = 87;
RustLexer.NOT = 88;
RustLexer.AND = 89;
RustLexer.OR = 90;
RustLexer.ANDAND = 91;
RustLexer.OROR = 92;
RustLexer.PLUSEQ = 93;
RustLexer.MINUSEQ = 94;
RustLexer.STAREQ = 95;
RustLexer.SLASHEQ = 96;
RustLexer.PERCENTEQ = 97;
RustLexer.CARETEQ = 98;
RustLexer.ANDEQ = 99;
RustLexer.OREQ = 100;
RustLexer.SHLEQ = 101;
RustLexer.SHREQ = 102;
RustLexer.EQ = 103;
RustLexer.EQEQ = 104;
RustLexer.NE = 105;
RustLexer.GT = 106;
RustLexer.LT = 107;
RustLexer.GE = 108;
RustLexer.LE = 109;
RustLexer.AT = 110;
RustLexer.UNDERSCORE = 111;
RustLexer.DOT = 112;
RustLexer.DOTDOT = 113;
RustLexer.DOTDOTDOT = 114;
RustLexer.DOTDOTEQ = 115;
RustLexer.COMMA = 116;
RustLexer.SEMI = 117;
RustLexer.COLON = 118;
RustLexer.PATHSEP = 119;
RustLexer.RARROW = 120;
RustLexer.FATARROW = 121;
RustLexer.POUND = 122;
RustLexer.DOLLAR = 123;
RustLexer.QUESTION = 124;
RustLexer.LCURLYBRACE = 125;
RustLexer.RCURLYBRACE = 126;
RustLexer.LSQUAREBRACKET = 127;
RustLexer.RSQUAREBRACKET = 128;
RustLexer.LPAREN = 129;
RustLexer.RPAREN = 130;

RustLexer.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch (ruleIndex) {
		case 65:
			return this.SHEBANG_sempred(localctx, predIndex);
		case 86:
			return this.FLOAT_LITERAL_sempred(localctx, predIndex);
    	default:
    		throw "No registered predicate for:" + ruleIndex;
    }
};

RustLexer.prototype.SHEBANG_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.SOF();
		default:
			throw "No predicate with index:" + predIndex;
	}
};

RustLexer.prototype.FLOAT_LITERAL_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 1:
			return this.floatLiteralPossible();
		case 2:
			return this.floatDotPossible();
		default:
			throw "No predicate with index:" + predIndex;
	}
};




